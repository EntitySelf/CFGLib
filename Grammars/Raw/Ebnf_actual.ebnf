syntax = syntax rule, {syntax rule};
syntax rule = meta identifier, defining symbol, definitions list, terminator symbol;
definitions list = single definition, {definition separator symbol, single definition};
single definition = syntactic term, {concatenate symbol, syntactic term};
syntactic term = syntactic factor, [except symbol, syntactic exception];
syntactic exception = ? a syntactic-factor that could be replaced by a syntactic-factor containing no
meta-identifiers ?;
syntactic factor = [integer, repetition symbol], syntactic primary;
syntactic primary
= optional sequence
| repeated sequence
| grouped sequence
| meta identifier
| terminal string
| special sequence
| empty sequence;
optional sequence = start option symbol, definitions list, end option symbol;
repeated sequence = start repeat symbol, definitions list, end repeat symbol;
grouped sequence = start group symbol, definitions list, end group symbol;
empty sequence = ;

meta identifier
= letter, {meta identifier character};
meta identifier character
= letter
| decimal digit;

letter
= 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h'
| 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p'
| 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x'
| 'y' | 'z'
| 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H'
| 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P'
| 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X'
| 'Y' | 'Z';
decimal digit
= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9';
concatenate symbol = ',';
defining symbol = '=';
definition separator symbol = '|' | '/' | '!';
end comment symbol = '*)';
end group symbol = ')';
end option symbol = ']' | '/)';
end repeat symbol = '}' | ':)';
except symbol = '-';
first quote symbol = "'";
repetition symbol = '*';
second quote symbol = '"';
special sequence symbol = '?';
start comment symbol = '(*';
start group symbol = '(';
start option symbol = '[' | '(/';
start repeat symbol = '{' | '(:';
terminator symbol = ';' | '.';
other character = ' ' | ':' | '+' | '_' | '%' | '@' | '&' | '#' | '$' | '<' | '>' | '\' | '^' | '`' | '~';
space character = ' ';

horizontal tabulation character = ? U+0009 ? ;
new line = { ? U+000D ? }, ? U+000A ?, { ? U+000D ? };
vertical tabulation character = ? U+000B ? ;
form feed = ? U+000C ? ;
